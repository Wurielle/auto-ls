name: Release
on:
    push:
        tags:
            - 'v*'
env:
jobs:
    release:
        if: startsWith(github.ref, 'refs/tags/')
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout
                uses: actions/checkout@v4

            -   name: Create changelog for release
                id: github_release
                uses: mikepenz/release-changelog-builder-action@v1
                with:
                    configuration: 'changelog.config.json'
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            -   name: Update release
                uses: ncipollo/release-action@v1
                with:
                    allowUpdates: true
                    body: ${{ steps.github_release.outputs.changelog }}
                    token: ${{ secrets.GITHUB_TOKEN }}
                    prerelease: ${{ contains(github.ref, 'rc') || contains(github.ref, 'beta') || contains(github.ref, 'alpha')}}

    deploy:
        needs: [ release ]
        strategy:
            matrix:
                os: [ windows-2022 ]
        runs-on: ${{ matrix.os }}
        steps:
            -   name: Checkout
                uses: actions/checkout@v4

            -   name: Setup Node
                uses: actions/setup-node@v4
                with:
                    node-version: 20
                    cache: 'npm'

            -   name: Set env variables
                shell: bash
                run: |
                    echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
                    echo "${{secrets.VITE_MAILER_URL}}"

            -   name: Set package.json version
                uses: wurielle/package-version-action@v1
                with:
                    version: ${{ env.RELEASE_VERSION }}
                    targets: |
                        ./package.json
                        ./apps/app/package.json

            -   name: Install dependencies
                run: npm ci

            -   name: Build Electron app
                run: npm run electron:build
                working-directory: apps/app

            -   name: Cleanup Electron dist
                shell: bash
                working-directory: apps/app/dist_electron
                run: |
                    rm -rf win-unpacked linux-unpacked mac builder-debug.yml builder-effective-config.yaml bundled
                    ls -l ./

            -   name: Upload artifacts to Release
                uses: alexellis/upload-assets@0.3.0
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                with:
                    asset_paths: '["./apps/app/dist_electron"]'

            -   name: Rollback Release
                if: failure()
                uses: author/action-rollback@stable
                with:
                    tag: ${{ env.RELEASE_VERSION }}
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
